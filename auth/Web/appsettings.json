{
  // LogLevel Severity: "Trace", "Debug", "Information", "Warning", "Error", "Critical", "None"
  "Logging": {
    "MinimumLevel": "Trace",
    "Debug": {
      "LogLevel": {
        "Default": "Debug"
      }
    },
    "EventLog": {
      "LogName": "MicroServicesFramework",
      "SourceName": "MicroServicesFramework",
      "LogLevel": {
        "Default": "Warning"
      }
    },
    "EntityFramework": {
      "LogLevel": {
        "Microsoft": "Warning",
        "System": "Warning",
        "IdentityServer4": "Warning",
        "Default": "Information"
      }
    },
    "Console": {
      "IncludeScopes": true,
      "DisableColors": false,
      "TimestampFormat": "[HH:mm:ss] ",
      "LogToStandardErrorThreshold": "Warning",
      "LogLevel": {
        "Microsoft": "Warning",
        "System": "Warning",
        "Default": "Warning"
      }
    },
    "AzureAppServicesFile": {
      "IncludeScopes": true,
      "LogLevel": {
        "Default": "Warning"
      }
    },
    "AzureAppServicesBlob": {
      "IncludeScopes": true,
      "LogLevel": {
        "Microsoft": "Information"
      }
    },
    "ApplicationInsights": {
      "LogLevel": {
        "Default": "Information"
      }
    }
  },
  "certificateSettings": {
    "fileName": "msf.host.pfx",
    "password": "changeit"
  },
  "ConnectionStrings": {
    "ConfigurationDbConnection": "Data Source=mssql.service.msf.docker;Initial Catalog=em-identity;Persist Security Info=False;User ID=sa;Password=Password_123",
    "PersistedGrantDbConnection": "Data Source=mssql.service.msf.docker;Initial Catalog=em-identity;Persist Security Info=False;User ID=sa;Password=Password_123",
    "IdentityDbConnection": "Data Source=mssql.service.msf.docker;Initial Catalog=em-identity;Persist Security Info=False;User ID=sa;Password=Password_123",
    "DataProtectionDbConnection": "Data Source=mssql.service.msf.docker;Initial Catalog=em-identity;Persist Security Info=False;User ID=sa;Password=Password_123"
  },
  "DatabaseProviderConfiguration": {
    "ProviderType": "SqlServer"
  },
  "CertificateConfiguration": {
    "UseTemporarySigningKeyForDevelopment": false,
    "CertificateStoreLocation": "LocalMachine",
    "CertificateValidOnly": true,
    "UseSigningCertificateThumbprint": false,
    "SigningCertificateThumbprint": "",
    "UseSigningCertificatePfxFile": true,
    "SigningCertificatePfxFilePath": "/root/.dotnet/https/msf.host.pfx",
    "SigningCertificatePfxFilePassword": "changeit",
    "UseValidationCertificatePfxFile": true,
    "ValidationCertificatePfxFilePath": "/root/.dotnet/https/msf.host.pfx",
    "ValidationCertificatePfxFilePassword": "changeit",
    "UseValidationCertificateThumbprint": false,
    "ValidationCertificateThumbprint": "",
    "UseSigningCertificateForAzureKeyVault": false,
    "UseValidationCertificateForAzureKeyVault": false
  },
  "RegisterConfiguration": {
    "Enabled": true
  },

  "ExternalProvidersConfiguration": {
    "UseGitHubProvider": false,
    "GitHubClientId": "",
    "GitHubClientSecret": "",
    "UseAzureAdProvider": false,
    "AzureAdClientId": "",
    "AzureAdTenantId": "",
    "AzureInstance": "",
    "AzureAdSecret": "",
    "AzureAdCallbackPath": "",
    "AzureDomain": ""
  },
  "SmtpConfiguration": {
    "Host": "",
    "Login": "",
    "Password": ""
  },
  "SendGridConfiguration": {
    "ApiKey": "",
    "SourceEmail": "",
    "SourceName": ""
  },
  "LoginConfiguration": {
    "ResolutionPolicy": "Username"
  },
  "AdminConfiguration": {
    "PageTitle": "MicroServices Framework Identity",
    "HomePageLogoUri": "~/images/skoruba-icon.png",
    "FaviconUri": "~/favicon.ico",
    "Theme": null,
    "CustomThemeCss": null,
    "IdentityAdminBaseUrl": "https://auth.msf.host/admin",
    "AdministrationRole": "Admin"
  },
  "CspTrustedDomains": [
    "www.gravatar.com",
    "fonts.googleapis.com",
    "fonts.gstatic.com",
    "id-web.msf.local"
  ],
  "CultureConfiguration": {
    "Cultures": [],
    "DefaultCulture": null
  },
  "AdvancedConfiguration": {
    "IssuerUri": "https://auth.msf.host"
  },
  "BasePath": "",
  "IdentityOptions": {
    "ClaimsIdentity": {
      "RoleClaimType": "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
      "SecurityStampClaimType": "AspNet.Identity.SecurityStamp",
      "UserIdClaimType": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
      "UserNameClaimType": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name"
    },
    "Lockout": {
      "AllowedForNewUsers": true,
      "DefaultLockoutTimeSpan": "0.00:05:00.0",
      "MaxFailedAccessAttempts": 5
    },
    "Password": {
      "RequireDigit": true,
      "RequiredLength": 8,
      "RequiredUniqueChars": 1,
      "RequireLowercase": true,
      "RequireNonAlphanumeric": true,
      "RequireUppercase": true
    },
    "SignIn": {
      "RequireConfirmedAccount": false,
      "RequireConfirmedEmail": false,
      "RequireConfirmedPhoneNumber": false
    },
    "Stores": {
      "MaxLengthForKeys": -1,
      "ProtectPersonalData": false
    },
    "Tokens": {
      "AuthenticatorIssuer": "Microsoft.AspNetCore.Identity.UI",
      "AuthenticatorTokenProvider": "Authenticator",
      "ChangeEmailTokenProvider": "Default",
      "ChangePhoneNumberTokenProvider": "Phone",
      "EmailConfirmationTokenProvider": "Default",
      "PasswordResetTokenProvider": "Default"
    },
    "User": {
      "AllowedUserNameCharacters": "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-._@+",
      "RequireUniqueEmail": true
    }
  },
  "DataProtectionConfiguration": {
    "ProtectKeysWithAzureKeyVault": false
  },
  "AzureKeyVaultConfiguration": {
    "AzureKeyVaultEndpoint": "",
    "ClientId": "",
    "ClientSecret": "",
    "UseClientCredentials": true,
    "IdentityServerCertificateName": "",
    "DataProtectionKeyIdentifier": "",
    "ReadConfigurationFromKeyVault": false
  }
}