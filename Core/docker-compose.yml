###########################################################################################################
# core Stack
# HA Service discovery, health checks, load-balancing, DNS, service mesh routing, KV store, (HashiCorp Consul)
# HA DNS Server (DnsMasq)
# HA Secret Store/Vault (HashiCorp Vault)
# HA Reverse Proxy / Portal (Nginx)
# DevOps Management Web & Agent - Used to manage dev-ops stuff like Docker (Portainer)
# SSH Server - Used to allow dev browser to act as if it is located and routed within the cluster (OpenSSH)
###########################################################################################################
# External Ports
# 22        = ssh - SSH Server
# 8080      = portal - HTML UI
# 8200      = vault - HTML UI

version: "3.8"

volumes:
  consul_data:
  portainer_data:

configs:
  resolv_conf:
    file: ./resolv.conf
  dhclient_conf:
    file: ./dhclient.conf
  rsyslog_conf:
    file: ./rsyslog.conf
  
networks:
  admin_network:
    external: true

services:
  consul:
    image: microserviceframework/consul:dev
    command: agent -retry-join consul.service.consul
    init: true
    configs:
      # - source: resolv_conf
      #   target: /consul/templates/resolv.conf
      # - source: dhclient_conf
      #   target: /etc/dhcp/dhclient.conf
      - source: rsyslog_conf
        target: /consul/templates/rsyslog.conf
    cap_add:
      - NET_ADMIN
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - consul_data:/consul/data
    env_file:
      - ./core.env
    networks:
      admin_network:
        aliases:
          - consul.service.consul
    # logging:
    #   driver: syslog
    #   options:
    #     syslog-address: "tcp://graylog.service.consul:1514"
    #   driver: gelf
    #   options:
    #     gelf-address: "tcp://graylog.service.consul:12201"    
    deploy:
      endpoint_mode: dnsrr
      mode: global
      update_config:
        delay: 15s

  dns1: &dns_template
    image: microserviceframework/dns:dev
    init: true
    configs:
      - source: resolv_conf
        target: /etc/templates/resolv.conf
      # - source: dhclient_conf
      #   target: /etc/dhcp/dhclient.conf
      - source: rsyslog_conf
        target: /etc/rsyslog.conf
    depends_on:
      - consul
    environment:
      STATIC_IP: 192.168.100.2
    env_file:
      - ./core.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    cap_add:
      - NET_ADMIN
    networks:
      admin_network:
        ipv4_address: 192.168.100.2/24
        aliases:
          - dns.service.consul
    deploy:
      replicas: 1

  dns2:
    <<: *dns_template
    environment:
      STATIC_IP: 192.168.100.3
    networks:
      admin_network:
        ipv4_address: 192.168.100.3/24
        aliases:
          - dns.service.consul

  vault:
    image: microserviceframework/vault:dev
    init: true
    configs:
      - source: resolv_conf
        target: /etc/templates/resolv.conf
      - source: dhclient_conf
        target: /etc/dhcp/dhclient.conf
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - ./core.env
    cap_add:
      - IPC_LOCK
    ports:
      - 8200:8200
    networks:
      - admin_network
    dns:
      - 192.168.100.2
      - 192.168.100.3
    depends_on:
      - consul
      - dns
    deploy:
      replicas: 1

  portal:
    image: microserviceframework/portal:dev
    init: true
    configs:
      - source: resolv_conf
        target: /etc/templates/resolv.conf
      - source: dhclient_conf
        target: /etc/dhcp/dhclient.conf
    env_file:
      - ./core.env
    ports:
      - 8080:80
    networks:
      - admin_network
    dns:
      - 192.168.100.2
      - 192.168.100.3
    depends_on:
      - consul
      - dns
      - vault
      - portainer
      - portainer-agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  portainer:
    image: microserviceframework/portainer:dev
    init: true
    command: -H tcp://portainer-agent.service.consul:9001 --tlsskipverify
    configs:
      - source: resolv_conf
        target: /etc/templates/resolv.conf
      - source: dhclient_conf
        target: /etc/dhcp/dhclient.conf
    env_file:
      - ./core.env
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - admin_network
    dns:
      - 192.168.100.2
      - 192.168.100.3
    depends_on:
      - dns
      - consul
    deploy:
      placement:
        constraints: [node.platform.os == linux]

  portainer-agent:
    image: microserviceframework/portainer-agent:dev
    init: true
    configs:
      - source: resolv_conf
        target: /etc/templates/resolv.conf
      - source: dhclient_conf
        target: /etc/dhcp/dhclient.conf
    environment:
      CAP_HOST_MANAGEMENT: 1
      LOG_LEVEL: debug
      AGENT_CLUSTER_ADDR: portainer-agent.service.consul
      # AGENT_PORT: 9001
    env_file:
      - ./core.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - admin_network
    dns:
      - 192.168.100.2
      - 192.168.100.3
    depends_on:
      - dns
      - consul
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  # ssh-server:
  #   image: microserviceframework/ssh-server:dev
  #   init: true
    # configs:
    #   - source: resolv_conf
    #     target: /etc/templates/resolv.conf
  # - source: dhclient_conf
  # target: /etc/dhcp/dhclient.conf
#   env_file:
  #     - ./core.env
  #   ports:
  #     - 8080:22
  #   networks:
  #     - admin_network
  #   dns:
  #     - 192.168.100.2
  #     - 192.168.100.3
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   depends_on:
  #     - dns
  #     - consul
