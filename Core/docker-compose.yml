#####################################################
# External Ports
# 80/tcp       = portal:HTTP
# 443/tcp      = portal:HTTPS
# 8080/tcp     = proxy:SOCKS5
# 8081/tcp     = log-viewer:HTTP
# 8082/tcp     = swarm-visualizer:HTTP

#####################################################
# Internal Ports
# 53/tcp:udp   = dns:DNS
# 3001/tcp:udp = hello:HTTP Web UI
# 3002/tcp:udp = world:HTTP Web UI
# 8300/tcp     = registry-leader:RAFT (Consensus & Replication)
# 8301/tcp:udp = registry-leader:SERF (Gossip LAN)
# 8302/tcp:udp = registry-leader:SERF (Gossip WAN)
# 8500/tcp     = registry-leader:HTTP Web UI and REST API
# 8501/tcp     = registry-leader:HTTPS Web UI and REST API
# 8502/tcp     = registry-leader:gRPC

version: '3'

#configs:
#  dns-dnsmasq:
#    file: ./dns/dnsmasq.conf
#  dns-containerpilot:
#    file: ./dns/containerpilot.json5
#  portal-nginx:
#    file: ./portal/root/etc/nginx/nginx.conf
#  portal-containerpilot:
#    file: ./portal/root/etc/containerpilot.json5
#  registry-agent:
#    file: ./dns/registry-agent.sh

volumes:
  consul_data:
    #driver: local
    external: true

networks:
  # Access to all API services in all stacks
  #api_network:
   # external: true

  # Access to all services in all stacks
  admin_network:
    external: true

services:
  #####################################################
  # Dnsmasq
  dns-primary: &dns
    image: ${DOCKER_REGISTRY-docker.pkg.github.com/rodneywimberly/dockerrepositories/}dns:1.0
    #configs:
    #  - source: dns-dnsmasq
    #    target: /etc/dnsmasq/em.conf
    #  - source: dns-containerpilot
    #    target: /etc/containerpilot.json5
    #  - source: registry-agent
    #    target: /bin/registry-agent.sh
    deploy:
      mode: replicated
      replicas: 0
    environment:
      CONTAINERPILOT: /etc/containerpilot.json5
      CONSUL_LOCAL_CONFIG: >-
        {
          "datacenter": "docker",
          "domain": "em",
          "node_name": "dns1",
          "data_dir": "/consul/data",
          "bind_addr": "192.168.1.2",
          "advertise_addr": "192.168.1.2",
          "client_addr": "0.0.0.0",
          "retry_join": [ "registry-leader" ],
          "disable_host_node_id": true,
          "ui_config": { "enabled": false },
          "service": {
              "name": "dns",
              "tags": [ "primary" ],
              "port": 53
          }
        }
    depends_on:
      - registry-leader
    cap_add:
      - NET_ADMIN
    networks:
      admin_network:
        ipv4_address: 192.168.1.2

  #####################################################
  # Dnsmasq
  dns-secondary:
    <<: *dns
    environment:
      CONTAINERPILOT: /etc/containerpilot.json5
      CONSUL_LOCAL_CONFIG: >-
        {
          "datacenter": "docker",
          "domain": "em",
          "node_name": "dns2",
          "data_dir": "/consul/data",
          "bind_addr": "192.168.1.3",
          "advertise_addr": "192.168.1.3",
          "client_addr": "0.0.0.0",
          "retry_join": [ "registry-leader" ],
          "disable_host_node_id": true,
          "ui_config": { "enabled": false },
          "service": {
              "name": "dns",
              "tags": [ "secondary" ],
              "port": 53
          }
        }
    deploy:
      mode: replicated
      replicas: 0
    networks:
      admin_network:
        ipv4_address: 192.168.1.3

  #####################################################
  # Consul
  registry-leader: &consul
    image: '${DOCKER_REGISTRY-docker.pkg.github.com/rodneywimberly/dockerrepositories/}registry:1.0'
    deploy:
      mode: replicated
      replicas: 0
    command: agent -config-dir=/consul/config
    environment:
      CONSUL_BIND_INTERFACE: eth0
      CONSUL_ADVERTISE_INTERFACE: eth0
      CONSUL_LOCAL_CONFIG: >-
        {
          "server": true,
          "datacenter": "docker",
          "domain": "em",
          "node_name": "registry-leader",
          "data_dir": "/consul/data",
          "enable_script_checks": true,
          "leave_on_terminate": true,
          "client_addr": "0.0.0.0",
          "ui_config": { "enabled": true },
          "service": {
            "name": "registry",
            "tags": [ "leader" ],
            "port": 8500 }
        }
    ports:
      - '8500:8500'
    volumes:
      - consul_data:/consul/data
    cap_add:
      - NET_ADMIN
    networks:
      admin_network: {}
    dns:
      - 192.168.1.2
      - 192.168.1.3
    healthcheck:
      test: ['CMD', '/bin/sh', '-c', 'curl -sfLo /dev/null http://127.0.0.1:8500/v1/health/node/$$HOSTNAME']

  #####################################################
  # Consul
  registry-follower:
    image: '${DOCKER_REGISTRY-docker.pkg.github.com/rodneywimberly/dockerrepositories/}registry:1.0'
    command: agent -config-dir=/consul/config
    deploy:
      mode: replicated
      replicas: 0
    environment:
      CONSUL_ADVERTISE_INTERFACE: eth0
      CONSUL_BIND_INTERFACE: eth0
      CONSUL_LOCAL_CONFIG: >-
        {
          "server": true,
          "datacenter": "docker",
          "domain": "em",
          "node_name": "registry-follower",
          "data_dir": "/consul/data",
          //"enable_script_checks": true,
          "enable_local_script_checks": true,
          "disable_host_node_id" : true,
          "disable_remote_exec": true,
          "disable_update_check": true,
          "leave_on_terminate": true,
          "retry_join": [ "registry-leader" ],
          "advertise_addr" : "{{ GetInterfaceIP \"eth0\" }}",
          "bind_addr": "{{ GetInterfaceIP \"eth0\" }}",
          "client_addr": "0.0.0.0",
          "rejoin_after_leave": true,
          "skip_leave_on_interrupt" : true,
          "autopilot": {
            "cleanup_dead_servers": true
          },
          "disable_update_check": true,
          "log_level": "debug",
          "ui_config": { "enabled": true },
          "addresses" : {
            "https" : "0.0.0.0"
          },
          "service": {
            "name": "registry",
            "tags": [ "follower"],
            "port": 8500 }
        }
    networks:
      admin_network: {}
    depends_on:
      - registry-leader
    dns:
      - 192.168.1.2
      - 192.168.1.3
    healthcheck:
      test: ['CMD', '/bin/sh', '-c', 'curl -sfLo /dev/null http://127.0.0.1:8500/v1/health/node/$$HOSTNAME']

  #####################################################
  # Vault
  vault:
    image: 'vault'
    deploy:
      mode: replicated
      replicas: 0
    environment:
      CONSUL_BIND_INTERFACE: eth0
      CONSUL_ADVERTISE_INTERFACE: eth0
      CONTAINERPILOT: /etc/containerpilot.json5
      VAULT_ADDR: 'http://127.0.0.1:8200'
      VAULT_LOCAL_CONFIG: >-
        {
            "ui": true,
            "backend": {
                "consul": {
                    "address": "127.0.0.1:8500",
                    "path": "vault/",
                    "scheme": "http"
                }
            },
            "default_lease_ttl": "168h",
            "listener": {
                "tcp": {
                    "address": "0.0.0.0:8200",
                    "cluster_address": "registry-leader:8201",
                    "tls_disable": "true"
                }
            },
            "max_lease_ttl": "720h",
            "api_addr": "http://registry-leader:8200",
            "cluster_addr": "http://registry-leader:8201"
        }
    cap_add:
      - IPC_LOCK
    networks:
      - admin_network
    dns:
      - 192.168.1.2
      - 192.168.1.3
    depends_on:
      - registry-follower
      - registry-leader
      - dns-primary
      - dns-secondary

  #####################################################
  # Hello
  hello:
    image: '${DOCKER_REGISTRY-docker.pkg.github.com/rodneywimberly/dockerrepositories/}hello:1.0'
    deploy:
      mode: replicated
      replicas: 0
    environment:
      CONSUL_BIND_INTERFACE: eth0
      CONSUL_ADVERTISE_INTERFACE: eth0
    depends_on:
      - registry-follower
      - registry-leader
      - dns-primary
      - dns-secondary
    networks:
      - admin_network
    dns:
      - 192.168.1.2
      - 192.168.1.3

  #####################################################
  # World
  world:
    image: '${DOCKER_REGISTRY-docker.pkg.github.com/rodneywimberly/dockerrepositories/}world:1.0'
    deploy:
      mode: replicated
      replicas: 0
    environment:
      CONSUL_BIND_INTERFACE: eth0
      CONSUL_ADVERTISE_INTERFACE: eth0
    depends_on:
      - registry-follower
      - registry-leader
      - dns-primary
      - dns-secondary
    networks:
      - admin_network
    dns:
      - 192.168.1.2
      - 192.168.1.3

  #####################################################
  # Nginx
  portal:
    image: '${DOCKER_REGISTRY-docker.pkg.github.com/rodneywimberly/dockerrepositories/}portal:1.0'
    #configs:
    #  - source: portal-dnsmasq
    #    target: /etc/nginx/nginx.conf
    #  - source: portal-containerpilot
    #    target: /etc/containerpilot.json5
    #  - source: registry-agent
    #    target: /bin/registry-agent.sh
    deploy:
      mode: replicated
      replicas: 0
    environment:
      CONSUL_BIND_INTERFACE: eth0
      CONSUL_ADVERTISE_INTERFACE: eth0
      CONTAINERPILOT: /etc/containerpilot.json5
    depends_on:
       - dns-primary
       - dns-secondary
       - registry-follower
       - registry-leader
       - hello
       - world
    networks:
      admin_network: {}
    ports:
      - '80:80'
      - '443:443'
    dns:
      - 192.168.1.2
      - 192.168.1.3

