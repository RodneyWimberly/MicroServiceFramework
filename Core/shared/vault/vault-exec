#!/usr/bin/env bash

. ./vault-functions.sh

# Don't allow non existent vars
# set -u
# set -o nounset

# Terminate on command error
# set -e
set -o errexit

# Apply -e to pipe commands
set -o pipefail

# Output commands
# set -x
# set -oxtrace

# if [ -z "$VAULT_TOKEN" ]; then
#     # shellcheck disable=SC2119
#     set_vault_admin_token
#     trap 'revoke_self' EXIT
# fi

# if [ -z "$VAULT_ADDR" ]; then
#     VAULT_ADDR=http://127.0.0.1:8200
# fi

if [ $# -gt 0 ]; then
    if [[ $1 == *":"* ]]; then
        SERVICE="$1"
        shift
    else
        SERVICE="core_vault"
    fi
    # docker-service-exec "$SERVICE" "/bin/sh -c 'rm -f entrypoint.sh && echo \"export VAULT_TOKEN=$VAULT_TOKEN\" >> entrypoint.sh && echo \"vault $*\" >> entrypoint.sh && /bin/sh entrypoint.sh'"
    docker-service-exec "$SERVICE" "/bin/sh -c 'rm -f entrypoint.sh && echo \"export VAULT_ADDR=$VAULT_ADDR VAULT_TOKEN=$VAULT_TOKEN\" >> entrypoint.sh && echo \"vault $*\" >> entrypoint.sh && /bin/sh entrypoint.sh'"
else
    # docker-service-exec core_vault "/bin/sh -c 'rm -f entrypoint.sh && echo \"export VAULT_TOKEN=$VAULT_TOKEN\" >> entrypoint.sh && echo \"/bin/sh\" >> entrypoint.sh && /bin/sh entrypoint.sh'"
    docker-service-exec core_vault "/bin/sh -c 'rm -f entrypoint.sh && echo \"export VAULT_ADDR=$VAULT_ADDR VAULT_TOKEN=$VAULT_TOKEN\" >> entrypoint.sh && echo \"/bin/sh\" >> entrypoint.sh && /bin/sh entrypoint.sh'"
fi