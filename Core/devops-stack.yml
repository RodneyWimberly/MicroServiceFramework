###########################################################################################################
# DevOps Stack
# Portainer Web & Agent - Used to manage dev-ops stuff like Docker
# SOCKS Proxy Server - Used to allow dev browser to act as if it is located and routed within the cluster
###########################################################################################################
# External Ports
# 1080:ingress/tcp      = proxy - SOCKS 4/5 Proxy Server
# 9000:ingress/tcp      = web - HTTP UI
# 9001:host/tcp:udp     = agent - HTTP REST

version: '3.8'

networks:
  admin_network:
    external: true

volumes:
  web_volume:

services:
  web:
    image: portainer/portainer
    volumes:
      - web_volume:/data
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - admin_network
    dns:
      - tasks.core_dns1
      - tasks.core_dns2
    deploy:
      placement:
        constraints: [node.platform.os == linux]

  agent:
    image: portainer/agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    cap_add:
      - ALL
    networks:
      - admin_network
    dns:
      - tasks.core_dns1
      - tasks.core_dns2
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  socks-proxy:
    image: serjs/go-socks5-proxy
    init: true
    ports:
      - 1080:1080
    networks:
      - admin_network
    dns:
      - tasks.core_dns1
      - tasks.core_dns2
    depends_on:
      - dns
      - consul
